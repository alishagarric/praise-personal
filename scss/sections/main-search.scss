@import "../utilities/mixins";

.main-search {
  --mainSearchColumns: 3;
  min-height: 100vh;

  &__heading {
    text-align: center;
  }

  &__form {
    max-width: var(--maxWidth);
    margin: 0 auto;
    display: flex;
    margin-bottom: var(--sectionVerticalSpacing);
    position: relative;

    > input[type="search"]:first-of-type {
      border-bottom-right-radius: 0px !important;
      border-top-right-radius: 0px !important;
      flex: 1;

      &:focus-visible ~ button {
        outline: 3px solid RGBA(var(--color-foreground) / 1);
        outline-offset: 0;
      }

      /* Fallback for browsers that don't support `:focus-visible` */
      &:focus ~ button {
        outline: 3px solid RGBA(var(--color-foreground) / 1);
        outline-offset: 0;
      }

      /* Negate fallback if browser supports `:focus-visible` */
      &:focus:not(:focus-visible) ~ button {
        outline: none;
      }
    }

    button {
      border-bottom-left-radius: 0px;
      border-top-left-radius: 0px;
      height: var(--inputHeight);
      line-height: var(--inputHeight);

      svg {
        transform: scaleX(-1);
      }
    }

    label {
      display: none;
    }
  }

  &__predictive {
    position: absolute;
    left: 0;
    width: 100%;
    top: 100%;
    bottom: unset;
    background: RGB(var(--color-background));
    color: RGB(var(--color-text));
    margin-top: calc(var(--pxSize) / 2);

    &__cards {
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;
      gap: var(--pxSize);
      margin-bottom: var(--pxSize);

      > * {
        flex: 0 1 200px;
      }
    }
  }

  &__container {
    display: flex;
    flex-direction: column;
    align-items: center;

    p {
      align-items: center;
      margin-bottom: var(--pxSize);
    }
  }

  &__size {
    margin: calc(var(--pxSize) / 2) 0 var(--pxSize) 0;
  }

  &__results {
    display: grid;
    grid-template-columns: repeat(var(--mainSearchColumns), 1fr);
    gap: var(--pxSize) calc(var(--pxSize) / 3);

    li {
      position: relative;

      &:after {
        --sideSpace: calc(var(--btnHeight) * var(--btnSidesSpace));
        content: var(--searchType);
        @include p-sm;
        position: absolute;
        display: block;
        top: 0;
        left: 50%;
        max-width: 100%;
        transform: translate(-50%, -50%);
        border: 1px solid RGB(var(--color-text));
        background: RGB(var(--color-background));
        color: RGB(var(--color-text));
        margin: 0;
        z-index: 2;
        border-radius: var(--btnBorderRadius);
        padding: 0 var(--sideSpace);
        height: var(--btnHeight);
        line-height: var(--btnHeight);
      }

      > .content-card {
        --color-background: var(--color-foreground);
      }
    }
  }

  @media screen and (max-width: 1024px) {
    --mainSearchColumns: 2;
  }

  @media screen and (max-width: 676px) {
    --mainSearchColumns: 1;
  }
}
