{{ 'header.css' | asset_url | stylesheet_tag }}

{% assign className = 'site-header' %}

{% comment %} Output navigation twice, one to display on scroll up and one that always exists at the top of the page content {% endcomment %}
{% for i in (1..2) %}
  {% assign style = 'on-scroll' %}
  {% if forloop.index0 == 1 %}
    {% assign style = 'relative' %}
  {% endif %}

  <{% if style == "on-scroll" %}sticky-header{% else %}relative-header{% endif %} class="{{ className }} __style-{{ style }} {% if section.settings.always_show_nav %}__always-show-nav{% endif %}">

    {% comment %}Announcement Bar {% endcomment %}
    {% if style == "relative" %}
      {% render 'announcement-bar' %}
    {% endif %}
    
    {% comment %} Mobile hamburger button {% endcomment %}
    {% capture dialog_class %}<script>__with-overlay</script> {{ className }}__hamburger{% endcapture %}
    {% capture dialog_id %}hamburger-{{ forloop.index }}{% endcapture %}
    {% capture dialog_content %}{% render 'overlay-nav' %}{% endcapture %}
    {% render 'dialog' style: "drawer", title: "<span></span>", content: dialog_content, class: dialog_class, id: dialog_id %}

    {% comment %} All the links {% endcomment %}
    <nav class="{{ className }}__main {% if section.settings.logo_placement == "center" %}__center-links{% endif%}">
      {% comment %} Logo {% endcomment %}
      <div
        class="{{ className }}__logo"
        {% if section.settings.logo_placement == 'center' %}
          style="--logoOrder: {{ section.settings.menu.links.size | divided_by: 2 }}"
        {% endif %}
      >
        <a href="{{ routes.root_url }}">
          {%- if section.settings.logo != blank -%}
            {{
              section.settings.logo
              | image_url: width: 250
              | image_tag: width: 125, alt: section.settings.logo.alt
              | default: shop.name
              | escape
            }}
          {%- else -%}
            <span class="{{ className }}__logo__text h4">{{ shop.name }}</span>
          {%- endif -%}
        </a>
      </div>

      {% for primary_link in section.settings.menu.links %}
        {% comment %} Regular link (no nested links) {% endcomment %}
        {% if primary_link.levels == 0 %}
          <a
            class="{{ className }}__plain-link p-sm"
            href="{{ primary_link.url }}"
            style="--linkOrder: {{ forloop.index0 }}"
            {% if link.current %}
              aria-current="page"
            {% endif %}
          >
            {{ primary_link.title | escape }}
          </a>

        {% comment %} Link with nested links (dropdown) {% endcomment %}
        {% else %}
          {% capture dropdown %}
            <div class="{{ className }}__dropdown" style="--linkOrder: {{ forloop.index0 }}">
              <div class="{{ className }}__dropdown__inner">
                {% assign blockClassName = className | append: "__dropdown__block" %}

                {% if primary_link.levels == 1 %}
                  {% render 'nav-dropdown-submenu' menu: primary_link.links, className: blockClassName %}
                {% else %}
                  {% for secondary_link in primary_link.links %}
                    {% render 'nav-dropdown-submenu' label: secondary_link.title, label_link: secondary_link.url, menu: secondary_link.links, className: blockClassName %}
                  {% endfor %}
                {% endif %}

   
                {% for block in section.blocks %}
                  {% case block.type %}
                    {% when 'mega_menu' %}
                      {% if block.settings.label == primary_link.title %}
                        {% comment %} Text Block {% endcomment %}
                        {% render 'nav-dropdown-text-block' heading: block.settings.heading_0, text: block.settings.text_0, button_label: block.settings.button_label, button_link: block.settings.button_link, button_color: block.settings.button_color, className: blockClassName %}

                        {% comment %} Promotion 1 {% endcomment %}
                        {% if block.settings.heading_1 or block.settings.image_1 %}
                          {% render 'nav-dropdown-promotion' heading: block.settings.heading_1, text: block.settings.text_1, link: block.settings.link_1, image: block.settings.image_1, className: blockClassName %}
                        {% endif %}

                        {% comment %} Promotion 2 {% endcomment %}
                        {% if block.settings.heading_2 or block.settings.image_2 %}
                          {% render 'nav-dropdown-promotion' heading: block.settings.heading_2, text: block.settings.text_2, link: block.settings.link_2, image: block.settings.image_2, className: blockClassName %}
                        {% endif %}
                        {% break %}
                      {% endif %}

                  {% endcase %}
                {% endfor %}
              </div>
            </div>
          {% endcapture %}

          {% capture disclosure_class %}__with-overlay {{ className }}__label p-sm {% if primary_link.levels == 1 %}__skinny{% endif %}{% endcapture %}
          {% capture css_vars %}--linkOrder: {{ forloop.index0 }};{% endcapture %}

          {% render 'disclosure' class: disclosure_class, title: primary_link.title, id: forloop.index, text: dropdown, style: "blank", css_vars: css_vars %}
        {% endif %}
      {% endfor %}
    </nav>

    {% comment %} Utility Links {% endcomment %}
    <div class="{{ className }}__utility-links">
      <a href="{{ routes.search_url }}">{% render 'svg-search' %}</a>
      {%- if customer -%}
        <a class="{{ className }}__plain-link" href="{{ routes.account_url }}">{{ 'sections.header.account' | t }}</a>
      {%- else -%}
        <a class="{{ className }}__plain-link" href="{{ routes.account_login_url }}">
          {{- 'sections.header.login' | t -}}
        </a>
      {%- endif -%}
      <a href="{{ routes.cart_url }}" class="{{ className }}__utility-links__cart">
        {% render 'svg-cart' %}
        <span id="CartBubble-{{ forloop.index0 }}">
          {{ cart.item_count }}
        </span>
      </a>
    </div>
  </{% if style == "on-scroll" %}sticky-header{% else %}header{% endif %}>
{% endfor %}

{% javascript %}

  class RelativeHeader extends HTMLElement {
    constructor() {
      super();

      this.header = this;
      this.hamburgerButton = this.querySelector(".site-header__hamburger");
      this.dropdowns = this.querySelectorAll("details.site-header__label");
      this.setupListener();

      //TODO on window resize, close all dropdowns, remove classes from heading and body
    }

    //Add a on click listener to every dropdown button
    setupListener() {
      this.dropdowns.forEach((dropdown) => {
        dropdown.querySelector("summary").addEventListener('click', this.updateActiveDialog.bind(this));
      });
      this.hamburgerButton.addEventListener('click', this.updateActiveDialog.bind(this));
    }

    updateActiveDialog(e) {
      let thisDropdown = e.target.parentNode;
      
      //close all other dropdowns
      this.dropdowns.forEach((dropdown) => {
        if ( dropdown != thisDropdown ){
          dropdown.removeAttribute("open");
        }
      })

      //let the header know a dropdown is open
      //if statement is kind of confusing but its whether the element had the open attr at the time of click
      if ( thisDropdown.hasAttribute("open") ) {
        document.body.classList.remove('__mobile-overflow-none');
        this.header.classList.remove('__dropdown-open');

      } else {
        document.body.classList.add('__mobile-overflow-none');
        this.header.classList.add('__dropdown-open');

      }
    }
  }

  customElements.define('relative-header', RelativeHeader);

  class StickyHeader extends RelativeHeader {
    constructor() {
      super();

      document.addEventListener('scroll', this.updateClass.bind(this), false);
      document.lastScollPosition = 0;
    }

    updateClass(e) {

      let scrollPosition = window.pageYOffset;
      let lastScollPosition = e.currentTarget.lastScollPosition;
      let alwaysShowNav = this.classList.contains('__always-show-nav');
      let scrollingDown = false;
      if (lastScollPosition < scrollPosition) {
        scrollingDown = true;
      }

      if ((!scrollingDown && scrollPosition > 200) || (scrollingDown && scrollPosition > 75 && alwaysShowNav)) {
        this.classList.add('__visible');
        this.parentNode.classList.add('__visible-nav');
      } else {
        this.classList.remove('__visible');
        this.parentNode.classList.remove('__visible-nav');
      }

      document.lastScollPosition = scrollPosition;
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

{% schema %}
{
  "name": "Header",
  "class": "section-header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "logo"
    },
    {
      "type": "radio",
      "id": "logo_placement",
      "label": "Logo Placement",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        }
      ],
      "default": "left"
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu"
    },
    {
      "id": "always_show_nav",
      "type": "checkbox",
      "label": "Don't hide navigation bar on scroll down",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "mega_menu",
      "name": "Mega Menu",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Nav Item Label"
        },
        {
          "type": "header",
          "content": "Text Block"
        },
        {
          "type": "text",
          "id": "heading_0",
          "label": "Heading"
        },
        {
          "type": "inline_richtext",
          "id": "text_0",
          "label": "Description"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "header",
          "content": "Promotion"
        },
        {
          "type": "text",
          "id": "heading_1",
          "label": "Heading"
        },
        {
          "type": "inline_richtext",
          "id": "text_1",
          "label": "Description"
        },
        {
          "type": "url",
          "id": "link_1",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Image"
        },
        {
          "type": "header",
          "content": "Promotion 2"
        },
        {
          "type": "text",
          "id": "heading_2",
          "label": "Heading"
        },
        {
          "type": "inline_richtext",
          "id": "text_2",
          "label": "Description"
        },
        {
          "type": "url",
          "id": "link_2",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Image"
        }
      ]
    }
  ]
}
{% endschema %}
