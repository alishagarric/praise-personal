
{% assign className = "site-header" %}

{% comment %} Output navigation twice, one to display on scroll up and one that always exists at the top of the page content {% endcomment %}
{% for i in (1..2) %}
  {% assign style = "on-scroll" %}
  {% if forloop.index0 == 1 %}
    {% assign style = "relative" %}
  {% endif %}

  <{% if style == "on-scroll" %}sticky-header{% else %}header{% endif %} class="{{ className }} __style-{{ style }} {% if section.settings.always_show_nav %}__always-show-nav{% endif %}">

    {% comment %} Logo {% endcomment %}
    <div class="{{ className }}__logo">
      {%- if request.page_type == 'index' -%}
        <h1>
      {%- endif -%}
        <a href="{{ routes.root_url }}">
          {%- if section.settings.logo != blank -%}
            {{ section.settings.logo |
              image_url: width: 250 |
              image_tag: width: 125, alt: section.settings.logo.alt | default: shop.name | escape 
            }}
          {%- else -%}
            <span class="{{ className }}__logo__text h4">{{ shop.name }}</span>
          {%- endif -%}
        </a>
      {%- if request.page_type == "index" -%}
        </h1>
      {%- endif -%}
    </div>

    {% comment %} Mobile hamburger button and divider {% endcomment %}
    <hamburger-button class="{{ className }}__hamburger"><span></span></hamburger-button>

    {% comment %} All the links {% endcomment %}
    <div class="{{ className }}__main-links">

      {% for primary_link in section.settings.menu.links %}

        {% comment %} Regular link (no nested links) {% endcomment %}
        {% if primary_link.levels == 0 %}
          <a class="{{ className }}__plain-link p-sm" href="{{ primary_link.url }}" class="p-sm">{{ primary_link.title }}</a>

        {% comment %} Link with nested links (dropdown) {% endcomment %}
        {% else %}
          {% capture dropdown %}
            <div class="{{ className }}__dropdown {% if primary_link.levels == 1 %}__skinny{% endif %}">
              <div class="{{ className }}__dropdown__inner">
                {% assign blockClassName = className | append: "__dropdown__block" %}

                {% if primary_link.levels == 1 %}
                  {% render 'nav-dropdown-submenu' menu: primary_link.links, className: blockClassName %}
                {% else %}
                  {% for secondary_link in primary_link.links %}
                    {% render 'nav-dropdown-submenu' label: secondary_link.title, label_link: secondary_link.url, menu: secondary_link.links, className: blockClassName %}
                  {% endfor %}
                {% endif %}

   
                {% for block in section.blocks %}
                  {% comment %}TODO are we going to give the option for nav-dropdown-article.liquid {% endcomment %}
                  {% case block.type %}
                    {% when 'mega_menu' %}
                      {% if block.settings.label == primary_link.title %}
                        {% comment %} Text Block {% endcomment %}
                        {% render 'nav-dropdown-text-block' heading: block.settings.heading_0, text: block.settings.text_0, button_label: block.settings.button_label, button_link: block.settings.button_link, button_color: block.settings.button_color, className: blockClassName %}

                        {% comment %} Promotion 1 {% endcomment %}
                        {% if block.settings.heading_1 or block.settings.image_1 %}
                          {% render 'nav-dropdown-promotion' heading: block.settings.heading_1, text: block.settings.text_1, link: block.settings.link_1, image: block.settings.image_1, className: blockClassName %}
                        {% endif %}

                        {% comment %} Promotion 2 {% endcomment %}
                        {% if block.settings.heading_2 or block.settings.image_2 %}
                          {% render 'nav-dropdown-promotion' heading: block.settings.heading_2, text: block.settings.text_2, link: block.settings.link_2, image: block.settings.image_2, className: blockClassName %}
                        {% endif %}
                        {% break %}
                      {% endif %}

                  {% endcase %}
                {% endfor %}
              </div>
            </div>
          {% endcapture %}
          <dropdown-button class="{{ className }}__label p-sm">
            {{ primary_link.title }}
            {% if primary_link.levels == 1 %}
              {{ dropdown }}
            {% endif %}
          </dropdown-button>
            {% if primary_link.levels > 1 %}
              {{ dropdown }}
            {% endif %}
        {% endif %}
      {% endfor %}

      {% for block in section.blocks %}
        {% case block.type %}




        {% endcase %}
      {% endfor %}

      {% comment %} CTA {% endcomment %}
      {% if section.settings.button_label and section.settings.button_link %}
        {% assign ctaClassName = className | append: "__cta" %}
        <div class="{{ ctaClassName }}">
          {% render 'button', class: ctaClassName, button_label: section.settings.button_label, button_link: section.settings.button_link %}
        </div>
      {% endif %}
    </div>

    {% comment %} All the icons/tools 
    <div class="{{ className }}__icons">

    </div>
    {% endcomment %}

  </{% if style == "on-scroll" %}sticky-header{% else %}header{% endif %}>
{% endfor %}

{% javascript %}

  class HamburgerButton extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    //Add a on click listener to every hamburger button
    setupListener() {
      this.addEventListener('click', this.updateOverlayNav.bind(this));
    }

    //toggle overlay nav
    updateOverlayNav(){
      //parent element for this section
      var thisSection = this.parentNode;

      this.classList.toggle("__active");
      document.body.classList.toggle('__mobile-overflow-none');

      if ( this.classList.contains('__active') ){
        thisSection.classList.add("__overlay-open");
      }
      else {
        thisSection.classList.remove("__overlay-open");
      }
    }
  }

  customElements.define('hamburger-button', HamburgerButton);

  class DropdownButton extends HTMLElement {
    constructor() {
      super();

      this.setupListener();
    }

    //Add a on click listener to every dropdown button
    setupListener() {
      this.addEventListener('click', this.updateActiveDropdown.bind(this));
    }

    //on dropdown button click, updates what is active
    updateActiveDropdown() {

      //parent element for this section
      var thisSection = this.parentNode.parentNode;
      //all dropdowns in this section
      var dropdowns = thisSection.querySelectorAll('.site-header__label');

      //remove active class on nav buttons
      for (var i = 0; i < dropdowns.length; i++ ) {
        if (dropdowns[i] != this ) {
          dropdowns[i].classList.remove('__active');
        }
      }

      //add active class on clicked item
      this.classList.toggle('__active');

      if ( this.classList.contains('__active') ){
        thisSection.classList.add("__dropdown-open");
      }
      else {
        thisSection.classList.remove("__dropdown-open");
      }
    }
  }

  customElements.define('dropdown-button', DropdownButton);

  class StickyHeader extends HTMLElement {
    constructor() {
      super();

       document.addEventListener('scroll', this.updateClass.bind(this), false);
       document.lastScollPosition = 0;
    }

    updateClass(e) {
      //all dropdowns in header
      var dropdowns = document.querySelectorAll('.site-header__label');

      for (var i = 0; i < dropdowns.length; i++ ){
        dropdowns[i].classList.remove('__active');
      }
      
      let scrollPosition = window.pageYOffset;
      let lastScollPosition = e.currentTarget.lastScollPosition;
      let alwaysShowNav = this.classList.contains("__always-show-nav");
      let scrollingDown = false;
      if ( lastScollPosition < scrollPosition ) {
        scrollingDown = true;
      }

      if ( (!scrollingDown && scrollPosition > 200) || (scrollingDown && scrollPosition > 75)) {
        this.classList.add('__visible');
        this.parentNode.classList.add('__visible-nav');
      } else {
        this.classList.remove('__visible');
        this.parentNode.classList.remove('__visible-nav');
      }

      document.lastScollPosition = scrollPosition;
    }
  }

  customElements.define('sticky-header', StickyHeader);

{% endjavascript %}




{% comment %}
{{ 'component-dialog.css' | asset_url | stylesheet_tag }}

<header class="header">
  <div class="container">
    <details class="dialog drawer overlay">
      <summary aria-haspopup="dialog" aria-controls="MenuDrawer">
        <span class="button">{{ 'sections.header.menu' | t }}</span>
        <span class="dialog-close button" aria-label="Close menu">{{ 'general.dialog.close' | t }}</span>
      </summary>
      <nav id="MenuDrawer" role="dialog" aria-label="Menu" aria-modal="true">
        <div class="dialog-body">
          <ul class="menu list-unstyled" role="list">
            {%- for link in section.settings.menu.links -%}
              <li>
                {%- if link.links != blank -%}
                  <details class="disclosure">
                    <summary class="menu-item{% if link.child_active %} active{% endif %}" 
                      role="button"
                      aria-expanded="true"
                      aria-controls="MenuItem-{{ forloop.index }}-Submenu"
                    >
                      <span>
                        {{ link.title | escape }}
                      </span>
                    </summary>
                    <div id="MenuItem-{{ forloop.index }}-Submenu">
                      <ul class="submenu list-unstyled" role="list">
                        {%- for childlink in link.links -%}
                          <li>
                            <a href="{{ childlink.url }}"
                              class="menu-item{% if childlink.current %} active{% endif %}" 
                              {% if childlink.current %} aria-current="page"{% endif %}
                            >
                              {{ childlink.title | escape }}
                            </a>
                          </li>
                        {%- endfor -%}
                      </ul>
                    </div>
                  </details>
                {%- else -%}
                  <a href="{{ link.url }}"
                    class="menu-item{% if link.current %} active{% endif %}"
                    {% if link.current %} aria-current="page"{% endif %}
                  >
                    <span {%- if link.current %} class="active"{% endif %}>
                      {{ link.title | escape }}
                    </span>
                  </a>
                {%- endif -%}
              </li>
            {%- endfor -%}
          </ul>
        </div>
      </nav>
    </details>
    
    <div class="utility-links">
      <a href="{{ routes.search_url }}">{{ 'sections.header.search' | t }}</a>
      {%- if customer -%}
        <a href="{{ routes.account_url }}">{{ 'sections.header.account' | t }}</a>
      {%- else -%}
        <a href="{{ routes.account_login_url }}">{{ 'sections.header.login' | t }}</a>
      {%- endif -%}
      <a href="{{ routes.cart_url }}">
        {{ 'sections.header.cart' | t }} <span id="CartBubble">{% unless cart == empty %}({{ cart.item_count }}){% endunless %}</span>
      </a>
    </div>
  </div>
</header>

{% endcomment %}

{% schema %}
{
  "name": "Header",
  "class": "section-header",
  "settings": [
    {
      "id": "always_show_nav",
      "type": "checkbox",
      "label": "Don't hide navigation bar on scroll down?",
      "default": false
    },
    {
      "type": "link_list",
      "id": "menu",
      "label": "Menu"
    },
    {
      "type": "header",
      "content": "CTA"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "Button label",
      "label": "Button Label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    },
    {
      "type": "select",
      "id": "button_color",
      "label": "Button Color",
      "default": "default",
      "options":[
        {
            "value": "default",
            "label": "Default"
        },
        {
            "value": "primary",
            "label": "Primary Theme"
        },
        {
            "value": "2",
            "label": "2nd Theme"
        },
        {
            "value": "3",
            "label": "3rd Theme"
        },
        {
            "value": "4",
            "label": "4th Theme"
        },
        {
            "value": "5",
            "label": "5th Theme"
        }
      ]
    }
  ],
"blocks": [
    {
      "type": "mega_menu",
      "name": "Mega Menu",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Nav Item Label"
        },
        {
          "type": "header",
          "content": "Text Block"
        },
        {
          "type": "text",
          "id": "heading_0",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "text_0",
          "label": "Description"
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        },
        {
          "type": "header",
          "content": "Promotion"
        },
        {
          "type": "text",
          "id": "heading_1",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "text_1",
          "label": "Description"
        },
        {
          "type": "url",
          "id": "link_1",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Image"
        },
        {
          "type": "header",
          "content": "Promotion 2"
        },
        {
          "type": "text",
          "id": "heading_2",
          "label": "Heading"
        },
        {
          "type": "richtext",
          "id": "text_2",
          "label": "Description"
        },
        {
          "type": "url",
          "id": "link_2",
          "label": "Link"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Image"        }
      ]  
    }
  ]
}

{% endschema %}
