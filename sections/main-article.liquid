{% style %}
  #Main-article-{{ section.id }} {
    --topSpacingRatio: {{ section.settings.top_spacing }} / 100;
    --bottomSpacingRatio: {{ section.settings.bottom_spacing }} / 100;
  }
{% endstyle %}

  <div id="Main-article-{{ section.id }}" class="main-article __theme-{{ section.settings.theme }}">
    {%- for block in section.blocks -%}
      {%- case block.type -%}
        {%- when '@app' -%}  
          {% render block %}
        {%- when 'featured_image'-%}
          {%- if article.image -%}
            <div
              class="main-article__image __crop-{{ block.settings.crop_shape }} __theme-{{ block.settings.overlay_theme }}"
              style="--imageRatio: {{ article.image.height | divided_by: 1.00 | divided_by: article.image.width | times: 100 }}%; --overlayOpacity: calc( {{ block.settings.overlay }} / 100);"
            >
              {% assign image = article.image | image_url: width: article.image.width %}
              {% render 'next-gen-img', image: image %}
            </div>
          {%- endif -%}  
        {%- when 'title'-%}
          {% assign heading_class = "__overlap-" | append: block.settings.overlap | append: ' main-article' %}
          {% render 'heading' heading: article.title, class: heading_class, heading_tag: "h1", heading_size: block.settings.heading_size, alt_heading: block.settings.alt_heading %}

        {%- when 'details' -%}  
          <div class="main-article__details">
            <p class="p-sm">{{ article.published_at | time_tag: format: 'date' }}</p>
            <p class="p-sm">{{ article.author }}</p> 
          </div>          
        {%- when 'content'-%}
          <div class="main-article__content __article-txt">
            {% assign article_content = article.content | split: '<img' %}
            {% assign join_string = '<img class="__crop-' | append: block.settings.image_corners | append: '"' %}
            {% assign article_content = article_content | join: join_string %}
            {{ article_content }}
          </div>

          {% comment %} Not in design, but in starter, keeping just in case
            {% assign button_label =  'blogs.article.back_to_blog' | t: title: blog.title %}
            {% render 'button' button_link: blog.url, button_label: button_label, class: "main-article" %}
          {% endcomment %}

        {%- when 'side_bar' -%}
          <div class="main-article__sidebar">
            <div class="main-article__sidebar__inner">
              {% if block.settings.label %}
                <h6 class="p-sm">{{ block.settings.label }}</h6>
              {% endif %}

              {% if article.metafields.custom.sidebar_content != blank %}
                <div class="p">
                  {{ article.metafields.custom.sidebar_content }}
                </div>
              {% endif %}
              
              {% if block.settings.content != blank %}
                <div class="p">
                  {{ block.settings.content }}
                </div>
              {% endif %}

              {% if block.settings.associated_products == true and article.metafields.custom.associated_products %}
                <div class="main-article__sidebar__products">
                  {% for product in article.metafields.custom.associated_products.value %}
                    {% render 'quick-product' quick_product: product, class: "main-article__sidebar__products__product", style: "stacked" %}
                  {% endfor %}
                </div>
              {% endif %}

              <div class="p-sm">{{ 'general.social.share' | t }}</div>
              {% render 'sharing-icons' %}
            </div>
          </div>
      {%- endcase -%}
    {%- endfor -%}
  </div>


<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Article",
    "articleBody": {{ article.content | strip_html | json }},
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": {{ request.origin | append: page.url | json }}
    },
    "headline": {{ article.title | json }},
    {% if article.excerpt != blank %}
      "description": {{ article.excerpt | strip_html | json }},
    {% endif %}
    {% if article.image %}
      "image": [
        {{ article | image_url: width: article.image.width | prepend: "https:" | json }}
      ],
    {% endif %}
    "datePublished": {{ article.published_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "dateCreated": {{ article.created_at | date: '%Y-%m-%dT%H:%M:%SZ' | json }},
    "author": {
      "@type": "Person",
      "name": {{ article.author | json }}
    },
    "publisher": {
      "@type": "Organization",
      {% if settings.share_image %}
        "logo": {
          "@type": "ImageObject",
          "height": {{ settings.share_image.height | json }},
          "url": {{ settings.share_image | image_url: width: settings.share_image.width | prepend: "https:" | json }},
          "width": {{ settings.share_image.width | json }}
        },
      {% endif %}
      "name": {{ shop.name | json }}
    }
  }
</script>

{% schema %}
{
  "name": "t:sections.main-article.name",
  "tag": "article",
  "settings": [
    {
      "type": "header",
      "content": "Section"
    },
    {
      "type": "select",
      "id": "theme",
      "options": [
        {
          "value": "primary",
          "label": "Primary Theme"
        },
        {
          "value": "2",
          "label": "2nd Theme"
        },
        {
          "value": "3",
          "label": "3rd Theme"
        },
        {
          "value": "4",
          "label": "4th Theme"
        },
        {
          "value": "5",
          "label": "5th Theme"
        }
      ],
      "default": "primary",
      "label": "Theme"
    },
    {
      "type": "range",
      "id": "top_spacing",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "Top Spacing",
      "default": 50
    },
    {
      "type": "range",
      "id": "bottom_spacing",
      "min": 0,
      "max": 100,
      "step": 10,
      "unit": "%",
      "label": "Bottom Spacing",
      "default": 50
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "featured_image",
      "name": "t:sections.main-article.blocks.featured_image.name",
      "limit": 1,
      "settings": [
        {
          "type": "range",
          "id": "overlay",
          "label": "Overlay Opacity",
          "info": "If above 0%, an overlay will be added on top of the image to create contrast behind the text.",
          "min": 0,
          "max": 70,
          "step": 10,
          "unit": "%",
          "default": 0
        },
        {
          "type": "select",
          "id": "overlay_theme",
          "options": [
            {
              "value": "primary",
              "label": "Primary Theme"
            },
            {
              "value": "2",
              "label": "2nd Theme"
            },
            {
              "value": "3",
              "label": "3rd Theme"
            },
            {
              "value": "4",
              "label": "4th Theme"
            },
            {
              "value": "5",
              "label": "5th Theme"
            }
          ],
          "default": "primary",
          "label": "Overlay Theme"
        },
        {
          "type": "select",
          "id": "crop_shape",
          "options": [
            {
              "value": "default",
              "label": "No Crop"
            },
            {
              "value": "landscape",
              "label": "Landscape"
            },
            {
              "value": "rounded-landscape",
              "label": "Rounded Landscape"
            },
            {
              "value": "semicircle-landscape",
              "label": "Semicircle Landscape"
            },
            {
              "value": "wide",
              "label": "Wide"
            },
            {
              "value": "rounded-wide",
              "label": "Rounded Wide"
            },
            {
              "value": "semicircle-wide",
              "label": "Semicircle Wide"
            }
          ],
          "default": "wide",
          "label": "Image Crop Shape"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-article.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h1",
              "label": "X-Large"
            },
            {
              "value": "h2",
              "label": "Large"
            },
            {
              "value": "h3",
              "label": "Medium"
            },
            {
              "value": "h4",
              "label": "Small"
            }
          ],
          "default": "h4",
          "label": "Heading Size"
        },
        {
          "type": "checkbox",
          "id": "alt_heading",
          "label": "Use body font instead of heading font for heading?"
        },
        {
          "type": "checkbox",
          "id": "overlap",
          "label": "Enable overlap?",
          "info": "Requires a featured image",
          "default": false
        }
      ]
    },
    {
      "type": "content",
      "name": "t:sections.main-article.blocks.content.name",
      "limit": 1,
      "settings": [
         {
          "type": "select",
          "id": "image_corners",
          "options": [
            {
              "value": "default",
              "label": "Square Corners"
            },
            {
              "value": "rounded",
              "label": "Rounded Corners"
            },
            {
              "value": "semicircle",
              "label": "Semicircle Corners"
            }
          ],
          "default": "default",
          "label": "Image Corners"
        }
      ]
    },
    {
      "type": "side_bar",
      "name": "Side Bar",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content",
          "info": "Add content here, or by utilizing the article metafeild TODO: link"
        },
        {
          "type": "checkbox",
          "id": "associated_products",
          "label": "Show associated products?",
          "info": "Dependent on article metafield TODO: link"
        }
      ]
    },
    {
      "type": "details",
      "name": "t:sections.main-article.blocks.details.name",
      "limit": 1
    }
  ],
  "presets": [
    {
      "name": "Main Article",
      "blocks": [
        {
          "type": "featured_image"
        },
        {
          "type": "title"
        },
        {
          "type": "content"
        }
      ]
    }
  ]
}
{% endschema %}

