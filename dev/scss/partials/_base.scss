//Main structures
////////////////////////////////////

html {
  height: 100%;
  background: RGB(var(--color-background));
  color: RGB(var(--color-text));

  * {
    font-family: var(--font-body-family);
    font-style: var(--font-body-style);
    font-weight: var(--font-body-weight);
  }
}

body {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  min-height: 100%;

  ::selection {
    background: RGB(var(--color-foreground)); /* WebKit/Blink Browsers */
  }
  ::-moz-selection {
    background: RGB(var(--color-foreground)); /* Gecko Browsers */
  }

  &.__mobile-overflow-none {
    overflow: hidden;
  }

  main {
    > *:first-child {
      margin-top: var(--navHeight);
    }
  }
}

//Sections' space and color defaults
////////////////////////////////////
body > main > section > div,
body > div > footer {
  padding: calc(var(--sectionVerticalSpacing) * var(--topSpacingRatio))
    var(--sectionGuttersSpacing)
    calc(var(--sectionVerticalSpacing) * var(--bottomSpacingRatio))
    var(--sectionGuttersSpacing);
  position: relative;
  color: RGB(var(--color-text));

  &:after {
    content: "";
    position: absolute;
    pointer-events: none;
    top: 0;
    bottom: 0;
    left: 50%;
    width: 100vw;
    transform: translateX(-50%);
    background: RGB(var(--color-background));
    z-index: -1;
  }
}

body > main > section {
  max-width: var(--siteMaxWidth);
  margin: 0 auto;
}

//How the nav position effects sticky elements
.__visible-nav + main {
  --stickyElementTransition: translateY(var(--navHeight));
}

//Form styles
////////////////////////////////////
form {
  button,
  input,
  textarea {
    font-family: var(--font-body-family);
    letter-spacing: 0.04rem;
    -webkit-appearance: none;
    margin: 0;
  }

  input[type="text"],
  input[type="email"] {
    height: var(--inputHeight);
    padding: 0 calc(var(--inputHeight) / 3);
    border-radius: 0px;
  }

  input[type="text"],
  input[type="email"],
  textarea {
    border: 1px solid RGB(var(--color-text));
    background: transparent;
  }

  textarea {
    border-radius: 0px;
    padding: calc(var(--inputHeight) / 3);
  }

  ::placeholder {
    color: RGB(var(--color-text));
    opacity: 50%;
  }

  &.__form-styles {
    display: flex;
    flex-direction: column;
    gap: calc(var(--inputHeight) / 3);

    > div {
      display: flex;
      gap: calc(var(--inputHeight) / 3);

      > input {
        flex: 1;
      }
    }
  }

  @media screen and (max-width: 676px) {
    &.__form-styles {
      & > div {
        display: block;
      }

      input {
        width: 100%;

        &:first-of-type {
          margin-bottom: calc(var(--inputHeight) / 3);
        }
      }
    }
  }
}

//Button styles
////////////////////////////////////

.btn,
button,
input[type="submit"] {
  height: var(--btnHeight);
  line-height: var(--btnHeight);
  border-radius: var(--btnBorderRadius);
  background: RGB(var(--color-foreground));
  color: RGB(var(--color-foreground-text));
  padding: 0 calc(var(--btnHeight) * var(--btnSidesSpace));
  display: flex;
  width: fit-content;
  text-transform: uppercase;
  text-align: center;
  white-space: nowrap;
  font-size: calc(1rem * var(--font-body-scale));
  letter-spacing: calc(0.05rem * var(--font-body-scale));
  font-weight: 500;
  margin: 1rem 0 0 0;
  align-items: center;
  -webkit-appearance: none;

  &.__with-border {
    background: none;
    border: 2px solid RGB(var(--color-text));
    color: RGB(var(--color-text));
    width: fit-content;
    border-radius: 2px;

    &:hover {
      background: RGB(var(--color-foreground));
      color: RGB(var(--color-foreground-text));

      svg {
        stroke: RGB(var(--color-foreground-text));
      }
    }

    svg {
      stroke: RGB(var(--color-text));
      width: calc(var(--btnHeight) / 3);
      margin-left: calc(var(--btnHeight) / 4);
    }
  }

  &.__with-underline {
    background: none;
    color: RGB(var(--color-text));
    border: none;
    height: auto;
    line-height: 1.2;
    position: relative;
    display: inline-block;
    padding: 0 0 0.25rem 0;
    margin-top: 0;
    margin-bottom: 0;

    &:after {
      content: "";
      position: absolute;
      bottom: 0;
      left: 0;
      height: 1px;
      width: 100%;
      background-color: RGB(var(--color-text));
    }
  }
}

.__btn-hover {
  &-default {
    .btn,
    button,
    input[type="submit"] {
      &:hover {
        opacity: 0.8;
      }
    }
  }

  &-border {
    .btn,
    button,
    input[type="submit"] {
      &:not(.__with-underline) {
        &:hover {
          outline: 2px solid RGBA(var(--color-text) / 0.5);
        }
      }
    }
  }

  &-shadow {
    .btn,
    button,
    input[type="submit"] {
      &:not(.__with-underline) {
        will-change: transform;
        transition: transform 0.25s ease;

        &:hover {
          box-shadow: 2px 2px 10px 0 RGBA(var(--color-text) / 0.2);
          transform: translate(2px, -3px);
        }
      }
    }
  }
}

//Old Modal styles
////////////////////////////////////
///
/// TODO: likely remove this for launch

.cmnc-old-modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(var(--color-black), 0.2);
  z-index: 999;

  &.__active {
    display: block;
  }

  &__exit {
    position: absolute;
    top: 0;
    right: 0;
    background: transparent;
    border: none;
    padding: calc(var(--pxSize) / 3);
    z-index: 10;

    svg {
      height: calc(var(--pxSize) / 2);
      width: auto;
      transform: rotate(45deg) scale(1);
      will-change: transform;
      transition: all 0.25s ease;
    }

    &:hover {
      cursor: pointer;

      svg {
        transform: rotate(45deg) scale(1.1);
      }
    }
  }

  &__plants {
    position: absolute;
    display: flex;
    right: 0;
    bottom: 0;
    width: 100%;
    gap: 6%;

    svg {
      width: calc(88% / 2);
      height: auto;

      * {
        fill: RGB(var(--color-foreground));
      }
    }
  }

  &__form {
    display: flex;
    flex-direction: column;
  }

  &__content {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80vw;
    max-height: 80vh;
    background: RGB(var(--color-background));
    color: RGB(var(--color-text));
    overflow: auto;
    display: flex;

    box-shadow: 0px calc(var(--pxSize) / 4) calc(var(--pxSize) / 2)
      rgba(var(--color-black), 0.2);

    &__text,
    &__image {
      flex: 50%;
    }

    &__image {
      position: relative;

      img {
        position: absolute;
        inset: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
    }

    &__text {
      position: relative;
      padding: var(--sectionVerticalSpacing) var(--pxSize);
    }
  }

  @media screen and (max-width: 676px) {
    &__exit {
      svg {
        fill: rgba(var(--color-background), 1);
      }
    }

    &__content {
      flex-direction: column;

      &__image {
        min-height: 20vh;
      }
    }
  }
}

// Placeholder SVG styles
.placeholder-svg {
  background: RGB(var(--color-text));
  opacity: 0.7;

  path {
    fill: RGB(var(--color-background));
  }
}

/* Creates clickable overlay backdrop when details is open */
details.overlay[open] > summary::before {
  content: "";
  position: fixed;
  z-index: 2;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  cursor: default;
}

/* Custom icon */

.custom-icon {
  content: "";
  width: var(--customIconHeight);
  height: var(--customIconHeight);
  background-size: contain;
  background-position: center center;
  background-repeat: no-repeat;
  display: block;
}
